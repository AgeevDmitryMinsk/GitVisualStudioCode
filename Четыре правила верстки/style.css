* { box-sizing: border-box;} /* Чтобы задать фокус не только для .card и не печатать box-sizing вручную для всех элементов — познакомьтесь с селектором *. 
		Он передаёт свойства напрямую каждому элементу на странице. Так как * очень общий селектор, создайте правило * { } сразу 
		после сброса стилей,  перед body { }.*/
			/* box-sizing: border-box; - Измените фокус всех элементов — и в частности, карточек — на внутренний. Для селектора * укажите box-sizing с искомым 
			значением.*/

body, h1, h2, h3, h4, p, a {
  margin: 0; /*/*убираем отступы для h1 и для body и т.д.*/
   font-size: 100%;/*Для сброса размеров текста воспользуйтесь комбинацией font-size: 100%; Первое свойство установит единый для всех элементов размер шрифта.*/
  font-weight: normal;/*Для сброса размеров текста воспользуйтесь комбинацией font-weight: normal.  Второе свойство задаст толщину шрифта со значением normal.*/
  font-family: 'Helvetica', 'Arial', sans-serif; /*Странице нужно задать новый шрифт. Чтобы не писать свойства для каждого элемента по отдельности, 
можно сказать что-то сразу всему документу. Для этого обращаются к элементу body, ведь он — корневой родительский элемент для всех видимых 
элементов на HTML-странице. Сразу после правила для body, h1 создайте отдельный селектор body и присвойте ему свойство font-family: 'Helvetica', 'Arial', 
sans-serif. Оно задаст всей странице шрифт Helvetica. Если такого шрифта нет на устройстве пользователя, браузер попробует использовать Arial. 
Если нет и Arial — браузер задействует системный шрифт без засечек.*/
}

.header {
  height: 100vh; /*Высоту секции сделайте равной 100% высоты окна просмотра.*/
  	/* height: 100vh} /*Высоту секции сделайте равной 100% высоты окна просмотра.*/
  	/*background-repeat: no-repeat; /*Отмените повторение фонового изображения.*/
  background-color: #eee;
  background-image: url(https://pictures.s3.yandex.net/frontend-developer/free-course/cover.jpg); /*фоновая картинка по ссылке url() всегда
  																								   располагается над цветом*/
  background-size: cover; /*Замените размер фона на специальное значение, которое пропорционально растянет картинку до размеров блока.*/
  background-position: center; /*Задайте выравнивание фонового изображения по центру — и по горизонтали, и по вертикали.*/
  text-align: center; /*Задайте для header выравнивание текста по центру - теперь дочерний элемент h1 имеет родительский стиль header  выравнивание
  						 текста по центру*/
}

.header-title {
	/*padding-top: 25%; /*Отодвиньте заголовок от верхнего края, задав для h1 отступ свойством padding-top*/
	margin: auto; /* margin: auto после display: flex; разместит текст по центру обоих осей родительского элемента.*/
	text-transform: uppercase; /*Переведите заголовок в верхний регистр, */
	font-weight: 500; /*Присвойте заголовку font-weight значение 500, чтобы получить что-то среднее между bold и normal,
						100 (очень тонкое начертание) до 900 (ультра-массивное начертание)*/
  font-size: 140px;
  color: white;
}

.overlay { /*Замените селектор div на селектор класса .overlay.*/
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, .5); /*Задайте фону элемента div 30% цвета и 70% прозрачности. - 0.3
  										Поскольку для div родительский элемент — это header, можно передать прозрачному квадрату размеры всего экрана. 
  										Установите значение 100% для ширины и высоты div. Цвет квадрата поменяйте на полупрозрачный чёрный: rgba(0, 0, 0, .5).*/
  display: flex; /*Чтобы поставить текст h1 в блоке overlay по центру, элемент с классом ovelay сделайте flex-элементом.
  				 После этого селектору h1 добавьте свойство margin: auto — оно разместит текст по центру обоих осей родительского элемента.
  				 золотая коллекция веб-разработчика*/
}
.content {
  font-size:0; /*присвойте родительскому элементу section класс content и задайте ему свойство font-size: 0. Это обнулит отсутп между блоками. Класный трюк!*/
				/*Селектор .content { } рекомендуем разместить под .overlay { } и перед .card { }.
				Это необязательно, ведь код работает и так. Но если у вас будет от 200-300 строк кода, то размещать 
				селекторы где попало — плохой тон; придётся тратить массу времени на поиски нужной строчки.
				Гораздо лучше держать стили для одного компонента рядом. По принципу «от общего — к частному», 
				когда правила для дочерних лежат ниже правил для родителей.*/
/*	background-color: #8aafcf;   /*Сдвигать карточки в центр вы будете не по отдельности, а вместе с родителем. 
								Подсветите его, чтобы наблюдать изменения — укажите для класса content фоновый цвет со значением #8aafcf.
								Теперь вы можете полностью увидеть подлинные размеры элемента section */
	width: 790px; /*Пока section с классом content упирается в края экрана, центрировать его не получится. Сократите ширину элемента до 790px.*/				
	margin: 100px auto 50px; /*Поставьте элемент section в центр экрана, задайте ему внешний отступ со значением auto слева и справа.
					 Сделайте это всего одним свойством, отступ сверху 100px и снизу 50px*/
	}



.card {  /*Во вкладке style.css создайте правило для всех будущих карточек. Пусть они будут шириной 350px, с бледно-синим фоном для «подсветки» #e3f3ff.*/
  width: 350px;
/*  background-color: #e3f3ff;*/
  margin-bottom: 60px; /*Отодвиньте их друг от друга, задав для .card внешнее нижнее поле размером 60px.*/
/*  padding-left: 45px; /*Пространство между границей и содержимым задаётся внутренним отступом. Установите для класса card левый и правый «паддинги» по 45px.*/
/*  padding-right: 45px;
/*  padding-top: 45px; /*Пускай пустое пространство обступает картинку, повторяя её квадратную форму. Для класса card создайте padding-top в размере, равном боковым отступам.*/
/*  padding-bottom: 70px; /*Нижний внутренний отступ сделайте 70px.*/

  padding: 45px 45px 70px; /*Вместо четырёх строк кода в правиле для селектора .card напишите одну так, чтобы сохранить внутренние отступы.*/
  /*border: dashed 5px rgba(250, 50, 50, .9); /*Посмотрите, как работает граница элемента. Задайте классу card границу-пунктир со значением dashed 
  											и толщиной 5px. Цвет границы пусть будет rgba(250, 50, 50, .4) — заодно вспомните про альфа-канал.*/
   /*border: solid 2px rgba(250, 50, 50, .4); /*Пунктирные границы в дизайне используют редко, тем более розовые. 
   											Сделайте границу менее вычурной, поменяв её начертание на solid, а толщину сократив до двух пикселей.*/
  box-shadow: 4px 4px 5px rgba(250, 50, 50, .4); /* Сделайте карточкам тень, которая подсветит их границы деликатнее, чем border. Элементам с 
  												классом card укажите тень со сдвигом вправо на 4px, сдвигом вниз также на 4px, размытием 5px и
  												цветом rgba(250, 50, 50, .4).*/
  display: inline-block;  /* inline-block сделает элемент блочно-строчным, т.е. размещаем блоки по гаризонтали */
                          /*если display: block то каждому элементу-блоку отводится строка по всей ширине*/
                          /*если же display: flex то элементы-блоки выстроятся в линию */
  margin-right: 90px; /*Классу card укажите внешний отступ справа размером 90px.*/
  /*justify-content: flex-between;*/
  }
.no-right-margin {
	margin-right: 0;
	margin-right: 0;
}
.card-title { /*Приведите текст внутри карточки к тому виду, что в макете от Кати. Для селектора класса .card-title задайте размер шрифта 24px и толщину шрифта 500. */
  font-size: 24px;
  font-weight: 500;
  margin-bottom: 10px; /*Создайте немного пространства между изображением, заголовком и текстом. Заголовку карточки сделайте нижний внешний отступ размером 10px*/


}


.card-text { /*Элементу с классом card-text укажите размер шрифта 16px.*/
  font-size: 16px}

  .card-image { /* Уместите изображения в карточки. Создайте селектор .card-image и укажите картинкам занять 100% ширины родителя.*/
  width: 100%;
  margin-bottom: 25px; /*Изображению задайте внешний отступ снизу размером 25px.*/
}
.footer {  /*Сделайте footer видимым. Присвойте соответствующему классу высоту 300px и чёрный цвет фона. 
			Так как footer — блочный элемент, ширину можно не указывать, она по умолчанию займёт 100% родительской ширины.*/
  height: 300px;
  background-color: black;
  display: flex; /*Чтобы поставить текст об авторстве по центру подвала, элемент с классом footer сделайте flex-элементом.
  				 После этого селектору .footer-author добавьте свойство margin: auto — оно разместит текст по центру обоих осей родительского элемента.
  				 золотая коллекция веб-разработчика*/
}
.footer-author { /* Тексту с классом footer-author задайте белый цвет и размер шрифта 24px.*/
  font-size: 24px;
  color: white;
  text-align: center; /*центрируем текст по центру по горизонтали*/
  margin: auto; /* margin: auto после display: flex; разместит текст по центру обоих осей родительского элемента.*/
}
/* CSSO: https://css.github.io/csso/csso.html - для минимизации CSS - кода */ 